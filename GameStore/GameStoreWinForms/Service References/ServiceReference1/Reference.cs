//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace GameStoreWinForms.ServiceReference1 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="clsGenre", Namespace="http://schemas.datacontract.org/2004/07/Selfhost")]
    [System.SerializableAttribute()]
    public partial class clsGenre : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private GameStoreWinForms.ServiceReference1.clsGame[] GamesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GenreDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GenreNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public GameStoreWinForms.ServiceReference1.clsGame[] Games {
            get {
                return this.GamesField;
            }
            set {
                if ((object.ReferenceEquals(this.GamesField, value) != true)) {
                    this.GamesField = value;
                    this.RaisePropertyChanged("Games");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GenreDescription {
            get {
                return this.GenreDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.GenreDescriptionField, value) != true)) {
                    this.GenreDescriptionField = value;
                    this.RaisePropertyChanged("GenreDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GenreName {
            get {
                return this.GenreNameField;
            }
            set {
                if ((object.ReferenceEquals(this.GenreNameField, value) != true)) {
                    this.GenreNameField = value;
                    this.RaisePropertyChanged("GenreName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="clsGame", Namespace="http://schemas.datacontract.org/2004/07/Selfhost")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(GameStoreWinForms.ServiceReference1.clsDigital))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(GameStoreWinForms.ServiceReference1.clsPhysical))]
    public partial class clsGame : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int GameCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GameGenreField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GameNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal PriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PublisherField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int QuantityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int YearField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int GameCode {
            get {
                return this.GameCodeField;
            }
            set {
                if ((this.GameCodeField.Equals(value) != true)) {
                    this.GameCodeField = value;
                    this.RaisePropertyChanged("GameCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GameGenre {
            get {
                return this.GameGenreField;
            }
            set {
                if ((object.ReferenceEquals(this.GameGenreField, value) != true)) {
                    this.GameGenreField = value;
                    this.RaisePropertyChanged("GameGenre");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GameName {
            get {
                return this.GameNameField;
            }
            set {
                if ((object.ReferenceEquals(this.GameNameField, value) != true)) {
                    this.GameNameField = value;
                    this.RaisePropertyChanged("GameName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Price {
            get {
                return this.PriceField;
            }
            set {
                if ((this.PriceField.Equals(value) != true)) {
                    this.PriceField = value;
                    this.RaisePropertyChanged("Price");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Publisher {
            get {
                return this.PublisherField;
            }
            set {
                if ((object.ReferenceEquals(this.PublisherField, value) != true)) {
                    this.PublisherField = value;
                    this.RaisePropertyChanged("Publisher");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Quantity {
            get {
                return this.QuantityField;
            }
            set {
                if ((this.QuantityField.Equals(value) != true)) {
                    this.QuantityField = value;
                    this.RaisePropertyChanged("Quantity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Year {
            get {
                return this.YearField;
            }
            set {
                if ((this.YearField.Equals(value) != true)) {
                    this.YearField = value;
                    this.RaisePropertyChanged("Year");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="clsDigital", Namespace="http://schemas.datacontract.org/2004/07/Selfhost")]
    [System.SerializableAttribute()]
    public partial class clsDigital : GameStoreWinForms.ServiceReference1.clsGame {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GameKeyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MediaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PlatformField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GameKey {
            get {
                return this.GameKeyField;
            }
            set {
                if ((object.ReferenceEquals(this.GameKeyField, value) != true)) {
                    this.GameKeyField = value;
                    this.RaisePropertyChanged("GameKey");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Media {
            get {
                return this.MediaField;
            }
            set {
                if ((object.ReferenceEquals(this.MediaField, value) != true)) {
                    this.MediaField = value;
                    this.RaisePropertyChanged("Media");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Platform {
            get {
                return this.PlatformField;
            }
            set {
                if ((object.ReferenceEquals(this.PlatformField, value) != true)) {
                    this.PlatformField = value;
                    this.RaisePropertyChanged("Platform");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="clsPhysical", Namespace="http://schemas.datacontract.org/2004/07/Selfhost")]
    [System.SerializableAttribute()]
    public partial class clsPhysical : GameStoreWinForms.ServiceReference1.clsGame {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MediaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MediaTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> ShippingCostField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Media {
            get {
                return this.MediaField;
            }
            set {
                if ((object.ReferenceEquals(this.MediaField, value) != true)) {
                    this.MediaField = value;
                    this.RaisePropertyChanged("Media");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MediaType {
            get {
                return this.MediaTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.MediaTypeField, value) != true)) {
                    this.MediaTypeField = value;
                    this.RaisePropertyChanged("MediaType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> ShippingCost {
            get {
                return this.ShippingCostField;
            }
            set {
                if ((this.ShippingCostField.Equals(value) != true)) {
                    this.ShippingCostField = value;
                    this.RaisePropertyChanged("ShippingCost");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="clsOrder", Namespace="http://schemas.datacontract.org/2004/07/Selfhost")]
    [System.SerializableAttribute()]
    public partial class clsOrder : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustomerNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustomerName {
            get {
                return this.CustomerNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomerNameField, value) != true)) {
                    this.CustomerNameField = value;
                    this.RaisePropertyChanged("CustomerName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IService1")]
    public interface IService1 {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetGenreNames", ReplyAction="http://tempuri.org/IService1/GetGenreNamesResponse")]
        string[] GetGenreNames();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetGenreNames", ReplyAction="http://tempuri.org/IService1/GetGenreNamesResponse")]
        System.Threading.Tasks.Task<string[]> GetGenreNamesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetOrderSummary", ReplyAction="http://tempuri.org/IService1/GetOrderSummaryResponse")]
        string[] GetOrderSummary();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetOrderSummary", ReplyAction="http://tempuri.org/IService1/GetOrderSummaryResponse")]
        System.Threading.Tasks.Task<string[]> GetOrderSummaryAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetGenre", ReplyAction="http://tempuri.org/IService1/GetGenreResponse")]
        GameStoreWinForms.ServiceReference1.clsGenre GetGenre(string prGenreName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetGenre", ReplyAction="http://tempuri.org/IService1/GetGenreResponse")]
        System.Threading.Tasks.Task<GameStoreWinForms.ServiceReference1.clsGenre> GetGenreAsync(string prGenreName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteOrder", ReplyAction="http://tempuri.org/IService1/DeleteOrderResponse")]
        int DeleteOrder(GameStoreWinForms.ServiceReference1.clsOrder prCustomerName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteOrder", ReplyAction="http://tempuri.org/IService1/DeleteOrderResponse")]
        System.Threading.Tasks.Task<int> DeleteOrderAsync(GameStoreWinForms.ServiceReference1.clsOrder prCustomerName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdateGenre", ReplyAction="http://tempuri.org/IService1/UpdateGenreResponse")]
        int UpdateGenre(GameStoreWinForms.ServiceReference1.clsGenre prGenre);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdateGenre", ReplyAction="http://tempuri.org/IService1/UpdateGenreResponse")]
        System.Threading.Tasks.Task<int> UpdateGenreAsync(GameStoreWinForms.ServiceReference1.clsGenre prGenre);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/InsertGenre", ReplyAction="http://tempuri.org/IService1/InsertGenreResponse")]
        int InsertGenre(GameStoreWinForms.ServiceReference1.clsGenre prGenre);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/InsertGenre", ReplyAction="http://tempuri.org/IService1/InsertGenreResponse")]
        System.Threading.Tasks.Task<int> InsertGenreAsync(GameStoreWinForms.ServiceReference1.clsGenre prGenre);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteGenre", ReplyAction="http://tempuri.org/IService1/DeleteGenreResponse")]
        int DeleteGenre(GameStoreWinForms.ServiceReference1.clsGenre prGenre);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteGenre", ReplyAction="http://tempuri.org/IService1/DeleteGenreResponse")]
        System.Threading.Tasks.Task<int> DeleteGenreAsync(GameStoreWinForms.ServiceReference1.clsGenre prGenre);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteGameByKey", ReplyAction="http://tempuri.org/IService1/DeleteGameByKeyResponse")]
        int DeleteGameByKey(string prKey, string prGenreName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteGameByKey", ReplyAction="http://tempuri.org/IService1/DeleteGameByKeyResponse")]
        System.Threading.Tasks.Task<int> DeleteGameByKeyAsync(string prKey, string prGenreName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdateGame", ReplyAction="http://tempuri.org/IService1/UpdateGameResponse")]
        int UpdateGame(GameStoreWinForms.ServiceReference1.clsGame prGame);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdateGame", ReplyAction="http://tempuri.org/IService1/UpdateGameResponse")]
        System.Threading.Tasks.Task<int> UpdateGameAsync(GameStoreWinForms.ServiceReference1.clsGame prGame);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/InsertGame", ReplyAction="http://tempuri.org/IService1/InsertGameResponse")]
        int InsertGame(GameStoreWinForms.ServiceReference1.clsGame prGame);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/InsertGame", ReplyAction="http://tempuri.org/IService1/InsertGameResponse")]
        System.Threading.Tasks.Task<int> InsertGameAsync(GameStoreWinForms.ServiceReference1.clsGame prGame);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteGame", ReplyAction="http://tempuri.org/IService1/DeleteGameResponse")]
        int DeleteGame(GameStoreWinForms.ServiceReference1.clsGame prGame);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteGame", ReplyAction="http://tempuri.org/IService1/DeleteGameResponse")]
        System.Threading.Tasks.Task<int> DeleteGameAsync(GameStoreWinForms.ServiceReference1.clsGame prGame);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService1Channel : GameStoreWinForms.ServiceReference1.IService1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1Client : System.ServiceModel.ClientBase<GameStoreWinForms.ServiceReference1.IService1>, GameStoreWinForms.ServiceReference1.IService1 {
        
        public Service1Client() {
        }
        
        public Service1Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service1Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string[] GetGenreNames() {
            return base.Channel.GetGenreNames();
        }
        
        public System.Threading.Tasks.Task<string[]> GetGenreNamesAsync() {
            return base.Channel.GetGenreNamesAsync();
        }
        
        public string[] GetOrderSummary() {
            return base.Channel.GetOrderSummary();
        }
        
        public System.Threading.Tasks.Task<string[]> GetOrderSummaryAsync() {
            return base.Channel.GetOrderSummaryAsync();
        }
        
        public GameStoreWinForms.ServiceReference1.clsGenre GetGenre(string prGenreName) {
            return base.Channel.GetGenre(prGenreName);
        }
        
        public System.Threading.Tasks.Task<GameStoreWinForms.ServiceReference1.clsGenre> GetGenreAsync(string prGenreName) {
            return base.Channel.GetGenreAsync(prGenreName);
        }
        
        public int DeleteOrder(GameStoreWinForms.ServiceReference1.clsOrder prCustomerName) {
            return base.Channel.DeleteOrder(prCustomerName);
        }
        
        public System.Threading.Tasks.Task<int> DeleteOrderAsync(GameStoreWinForms.ServiceReference1.clsOrder prCustomerName) {
            return base.Channel.DeleteOrderAsync(prCustomerName);
        }
        
        public int UpdateGenre(GameStoreWinForms.ServiceReference1.clsGenre prGenre) {
            return base.Channel.UpdateGenre(prGenre);
        }
        
        public System.Threading.Tasks.Task<int> UpdateGenreAsync(GameStoreWinForms.ServiceReference1.clsGenre prGenre) {
            return base.Channel.UpdateGenreAsync(prGenre);
        }
        
        public int InsertGenre(GameStoreWinForms.ServiceReference1.clsGenre prGenre) {
            return base.Channel.InsertGenre(prGenre);
        }
        
        public System.Threading.Tasks.Task<int> InsertGenreAsync(GameStoreWinForms.ServiceReference1.clsGenre prGenre) {
            return base.Channel.InsertGenreAsync(prGenre);
        }
        
        public int DeleteGenre(GameStoreWinForms.ServiceReference1.clsGenre prGenre) {
            return base.Channel.DeleteGenre(prGenre);
        }
        
        public System.Threading.Tasks.Task<int> DeleteGenreAsync(GameStoreWinForms.ServiceReference1.clsGenre prGenre) {
            return base.Channel.DeleteGenreAsync(prGenre);
        }
        
        public int DeleteGameByKey(string prKey, string prGenreName) {
            return base.Channel.DeleteGameByKey(prKey, prGenreName);
        }
        
        public System.Threading.Tasks.Task<int> DeleteGameByKeyAsync(string prKey, string prGenreName) {
            return base.Channel.DeleteGameByKeyAsync(prKey, prGenreName);
        }
        
        public int UpdateGame(GameStoreWinForms.ServiceReference1.clsGame prGame) {
            return base.Channel.UpdateGame(prGame);
        }
        
        public System.Threading.Tasks.Task<int> UpdateGameAsync(GameStoreWinForms.ServiceReference1.clsGame prGame) {
            return base.Channel.UpdateGameAsync(prGame);
        }
        
        public int InsertGame(GameStoreWinForms.ServiceReference1.clsGame prGame) {
            return base.Channel.InsertGame(prGame);
        }
        
        public System.Threading.Tasks.Task<int> InsertGameAsync(GameStoreWinForms.ServiceReference1.clsGame prGame) {
            return base.Channel.InsertGameAsync(prGame);
        }
        
        public int DeleteGame(GameStoreWinForms.ServiceReference1.clsGame prGame) {
            return base.Channel.DeleteGame(prGame);
        }
        
        public System.Threading.Tasks.Task<int> DeleteGameAsync(GameStoreWinForms.ServiceReference1.clsGame prGame) {
            return base.Channel.DeleteGameAsync(prGame);
        }
    }
}
