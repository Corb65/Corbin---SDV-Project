//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.VisualStudio.ServiceReference.Platforms, version 14.0.23107.0
// 
namespace GameStoreApp.ServiceReference1 {
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="clsGenre", Namespace="http://schemas.datacontract.org/2004/07/Game3Selfhost.DTO")]
    public partial class clsGenre : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Collections.ObjectModel.ObservableCollection<GameStoreApp.ServiceReference1.clsGame> GamesField;
        
        private string GenreDescriptionField;
        
        private string GenreNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<GameStoreApp.ServiceReference1.clsGame> Games {
            get {
                return this.GamesField;
            }
            set {
                if ((object.ReferenceEquals(this.GamesField, value) != true)) {
                    this.GamesField = value;
                    this.RaisePropertyChanged("Games");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GenreDescription {
            get {
                return this.GenreDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.GenreDescriptionField, value) != true)) {
                    this.GenreDescriptionField = value;
                    this.RaisePropertyChanged("GenreDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GenreName {
            get {
                return this.GenreNameField;
            }
            set {
                if ((object.ReferenceEquals(this.GenreNameField, value) != true)) {
                    this.GenreNameField = value;
                    this.RaisePropertyChanged("GenreName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="clsGame", Namespace="http://schemas.datacontract.org/2004/07/Game3Selfhost.DTO")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(GameStoreApp.ServiceReference1.clsDigital))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(GameStoreApp.ServiceReference1.clsPhysical))]
    public partial class clsGame : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.DateTime DateTimeLastModField;
        
        private int GameCodeField;
        
        private string GameGenreField;
        
        private string GameNameField;
        
        private decimal PriceField;
        
        private string PublisherField;
        
        private int QuantityField;
        
        private int YearField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DateTimeLastMod {
            get {
                return this.DateTimeLastModField;
            }
            set {
                if ((this.DateTimeLastModField.Equals(value) != true)) {
                    this.DateTimeLastModField = value;
                    this.RaisePropertyChanged("DateTimeLastMod");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int GameCode {
            get {
                return this.GameCodeField;
            }
            set {
                if ((this.GameCodeField.Equals(value) != true)) {
                    this.GameCodeField = value;
                    this.RaisePropertyChanged("GameCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GameGenre {
            get {
                return this.GameGenreField;
            }
            set {
                if ((object.ReferenceEquals(this.GameGenreField, value) != true)) {
                    this.GameGenreField = value;
                    this.RaisePropertyChanged("GameGenre");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GameName {
            get {
                return this.GameNameField;
            }
            set {
                if ((object.ReferenceEquals(this.GameNameField, value) != true)) {
                    this.GameNameField = value;
                    this.RaisePropertyChanged("GameName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Price {
            get {
                return this.PriceField;
            }
            set {
                if ((this.PriceField.Equals(value) != true)) {
                    this.PriceField = value;
                    this.RaisePropertyChanged("Price");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Publisher {
            get {
                return this.PublisherField;
            }
            set {
                if ((object.ReferenceEquals(this.PublisherField, value) != true)) {
                    this.PublisherField = value;
                    this.RaisePropertyChanged("Publisher");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Quantity {
            get {
                return this.QuantityField;
            }
            set {
                if ((this.QuantityField.Equals(value) != true)) {
                    this.QuantityField = value;
                    this.RaisePropertyChanged("Quantity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Year {
            get {
                return this.YearField;
            }
            set {
                if ((this.YearField.Equals(value) != true)) {
                    this.YearField = value;
                    this.RaisePropertyChanged("Year");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="clsDigital", Namespace="http://schemas.datacontract.org/2004/07/Game3Selfhost.DTO")]
    public partial class clsDigital : GameStoreApp.ServiceReference1.clsGame {
        
        private string GameKeyField;
        
        private string MediaField;
        
        private string PlatformField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GameKey {
            get {
                return this.GameKeyField;
            }
            set {
                if ((object.ReferenceEquals(this.GameKeyField, value) != true)) {
                    this.GameKeyField = value;
                    this.RaisePropertyChanged("GameKey");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Media {
            get {
                return this.MediaField;
            }
            set {
                if ((object.ReferenceEquals(this.MediaField, value) != true)) {
                    this.MediaField = value;
                    this.RaisePropertyChanged("Media");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Platform {
            get {
                return this.PlatformField;
            }
            set {
                if ((object.ReferenceEquals(this.PlatformField, value) != true)) {
                    this.PlatformField = value;
                    this.RaisePropertyChanged("Platform");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="clsPhysical", Namespace="http://schemas.datacontract.org/2004/07/Game3Selfhost.DTO")]
    public partial class clsPhysical : GameStoreApp.ServiceReference1.clsGame {
        
        private string MediaField;
        
        private string MediaTypeField;
        
        private System.Nullable<decimal> ShippingCostField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Media {
            get {
                return this.MediaField;
            }
            set {
                if ((object.ReferenceEquals(this.MediaField, value) != true)) {
                    this.MediaField = value;
                    this.RaisePropertyChanged("Media");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MediaType {
            get {
                return this.MediaTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.MediaTypeField, value) != true)) {
                    this.MediaTypeField = value;
                    this.RaisePropertyChanged("MediaType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> ShippingCost {
            get {
                return this.ShippingCostField;
            }
            set {
                if ((this.ShippingCostField.Equals(value) != true)) {
                    this.ShippingCostField = value;
                    this.RaisePropertyChanged("ShippingCost");
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IService1")]
    public interface IService1 {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetGenreNames", ReplyAction="http://tempuri.org/IService1/GetGenreNamesResponse")]
        System.Threading.Tasks.Task<System.Collections.ObjectModel.ObservableCollection<string>> GetGenreNamesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetOrderSummary", ReplyAction="http://tempuri.org/IService1/GetOrderSummaryResponse")]
        System.Threading.Tasks.Task<System.Collections.ObjectModel.ObservableCollection<string>> GetOrderSummaryAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetGenre", ReplyAction="http://tempuri.org/IService1/GetGenreResponse")]
        System.Threading.Tasks.Task<GameStoreApp.ServiceReference1.clsGenre> GetGenreAsync(string prGenreName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdateGenre", ReplyAction="http://tempuri.org/IService1/UpdateGenreResponse")]
        System.Threading.Tasks.Task<int> UpdateGenreAsync(GameStoreApp.ServiceReference1.clsGenre prGenre);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/InsertGenre", ReplyAction="http://tempuri.org/IService1/InsertGenreResponse")]
        System.Threading.Tasks.Task<int> InsertGenreAsync(GameStoreApp.ServiceReference1.clsGenre prGenre);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService1Channel : GameStoreApp.ServiceReference1.IService1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1Client : System.ServiceModel.ClientBase<GameStoreApp.ServiceReference1.IService1>, GameStoreApp.ServiceReference1.IService1 {
        
        /// <summary>
        /// Implement this partial method to configure the service endpoint.
        /// </summary>
        /// <param name="serviceEndpoint">The endpoint to configure</param>
        /// <param name="clientCredentials">The client credentials</param>
        static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
        
        public Service1Client() : 
                base(Service1Client.GetDefaultBinding(), Service1Client.GetDefaultEndpointAddress()) {
            this.Endpoint.Name = EndpointConfiguration.BasicHttpBinding_IService1.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public Service1Client(EndpointConfiguration endpointConfiguration) : 
                base(Service1Client.GetBindingForEndpoint(endpointConfiguration), Service1Client.GetEndpointAddress(endpointConfiguration)) {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public Service1Client(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(Service1Client.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress)) {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public Service1Client(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(Service1Client.GetBindingForEndpoint(endpointConfiguration), remoteAddress) {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Threading.Tasks.Task<System.Collections.ObjectModel.ObservableCollection<string>> GetGenreNamesAsync() {
            return base.Channel.GetGenreNamesAsync();
        }
        
        public System.Threading.Tasks.Task<System.Collections.ObjectModel.ObservableCollection<string>> GetOrderSummaryAsync() {
            return base.Channel.GetOrderSummaryAsync();
        }
        
        public System.Threading.Tasks.Task<GameStoreApp.ServiceReference1.clsGenre> GetGenreAsync(string prGenreName) {
            return base.Channel.GetGenreAsync(prGenreName);
        }
        
        public System.Threading.Tasks.Task<int> UpdateGenreAsync(GameStoreApp.ServiceReference1.clsGenre prGenre) {
            return base.Channel.UpdateGenreAsync(prGenre);
        }
        
        public System.Threading.Tasks.Task<int> InsertGenreAsync(GameStoreApp.ServiceReference1.clsGenre prGenre) {
            return base.Channel.InsertGenreAsync(prGenre);
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync() {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        public virtual System.Threading.Tasks.Task CloseAsync() {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginClose(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndClose));
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration) {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_IService1)) {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
                result.MaxReceivedMessageSize = int.MaxValue;
                result.AllowCookies = true;
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration) {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_IService1)) {
                return new System.ServiceModel.EndpointAddress("http://f00031157:50800/Service1");
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.Channels.Binding GetDefaultBinding() {
            return Service1Client.GetBindingForEndpoint(EndpointConfiguration.BasicHttpBinding_IService1);
        }
        
        private static System.ServiceModel.EndpointAddress GetDefaultEndpointAddress() {
            return Service1Client.GetEndpointAddress(EndpointConfiguration.BasicHttpBinding_IService1);
        }
        
        public enum EndpointConfiguration {
            
            BasicHttpBinding_IService1,
        }
    }
}
